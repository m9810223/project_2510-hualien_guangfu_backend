name: Build & Push Docker (GHCR)

on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*" # 例如 v1.2.3
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write # 允許推送到 GHCR
  # id-token: write  # 只有你要做 cosign/attest 時才需要

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # 會是 <owner>/<repo>

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # 這裡會自動產生合適的 tags：branch、sha、semver、latest 等
          tags: |
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64 # 同時出兩種架構；若 build 太久可先只留 amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false # 如果你要做 SLSA/attest，可設為 true

      # 可選：把摘要寫回 PR 或 run summary
      - name: Show pushed tags
        run: |
          echo "Pushed tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'
